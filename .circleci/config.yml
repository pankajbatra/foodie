version: 2.1
orbs:
    ruby: circleci/ruby@0.1.2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.7.0-node
      environment:
        RAILS_ENV: test
        DB_HOST: 127.0.0.1
        DB_USER: user
        DB_PASSWORD: passw0rd
        RUBYOPT: '-W:no-deprecated -W:no-experimental'
        COVERAGE: true
    - image: circleci/mysql:5.7.25
      environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: foodie_test
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
    environment:
    - CC_TEST_REPORTER_ID: c729d68d1d51c3eaf08ac6e0d3ef9a4f0f27606cad91eee78a4d9d5fba52645f
    working_directory: ~/circleci-foodie-ruby-rails
    executor: ruby/default
    steps:
        - checkout
        - run:
            name: Which bundler?
            command: bundle -v
        - ruby/bundle-install
        - run:
                name: Database Create
                command: bundle exec rake db:create
        - run:
                name: Database Setup
                command: bundle exec rake db:migrate
        - run:
                name: Database Prepare
                command: bundle exec rake db:test:prepare
        - run:
                name: Waiting for MySQL to be ready
                command: |
                  for i in `seq 1 10`;
                  do
                    nc -z 127.0.0.1 3306 && echo Success && exit 0
                    echo -n .
                    sleep 1
                  done
                  echo Failed waiting for MySQL && exit 1
        - run:
                name: Setup Code Climate test-reporter
                command: |
                  curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                  chmod +x ./cc-test-reporter
        - run:
                name: Run tests
                command: |
                  mkdir -p test-results/rspec test-artifacts
                  ./cc-test-reporter before-build
                  TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
                  bundle exec rspec --profile 10 \
                                    --color \
                                    --order random \
                                    --format RspecJunitFormatter \
                                    --out test-results/rspec/rspec.xml \
                                    --format progress \
                                    -- ${TESTFILES}
                  ./cc-test-reporter after-build --exit-code $?
        - store_test_results:
                path: test-results
        - store_artifacts:
                path: test-artifacts
